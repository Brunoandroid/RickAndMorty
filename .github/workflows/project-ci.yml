name: Project CI

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]
  workflow_dispatch:

concurrency:
  group: android-ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: read

env:
  JAVA_VERSION: '11'
  ANDROID_API_LEVEL: '33'
  ANDROID_BUILD_TOOLS: '33.0.2'
  GRADLE_OPTS: '-Dorg.gradle.jvmargs=-Xmx3g'
  TERM: dumb


jobs:
  unit_lint_sonar:
    name: Unit tests, Lint and Sonar
    runs-on: ubuntu-latest
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Verify Gradle Wrapper
        uses: gradle/wrapper-validation-action@v2

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install SDK components
        run: |
          sdkmanager "platform-tools" "platforms;android-${{ env.ANDROID_API_LEVEL }}" "build-tools;${{ env.ANDROID_BUILD_TOOLS }}"
          yes | sdkmanager --licenses

      - name: Gradle cache
        uses: gradle/gradle-build-action@v3
        with:
          gradle-wrapper-cache-enabled: true
          gradle-home-cache-cleanup: true

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Build, unit tests and lint (debug)
        run: ./gradlew --no-daemon --stacktrace --warning-mode all assembleDebug testDebugUnitTest lintDebug

      - name: Upload unit test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-report
          path: |
            **/build/test-results/testDebugUnitTest/**
            **/build/reports/tests/testDebugUnitTest/**

      - name: Upload lint reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lint-report
          path: |
            **/build/reports/lint-results-debug.*
            **/build/reports/lint/**

      - name: SonarQube Scan
        if: ${{ (github.event_name == 'push' || github.event_name == 'pull_request') && env.SONAR_TOKEN != '' && env.SONAR_HOST_URL != '' }}
        uses: SonarSource/sonarqube-scan-action@v3
        env:
          SONAR_TOKEN: ${{ env.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ env.SONAR_HOST_URL }}

      - name: SonarQube Quality Gate
        if: ${{ (github.event_name == 'push' || github.event_name == 'pull_request') && env.SONAR_TOKEN != '' && env.SONAR_HOST_URL != '' }}
        uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ env.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ env.SONAR_HOST_URL }}

  instrumented_tests:
    name: Instrumented tests
    runs-on: ubuntu-latest
    needs: unit_lint_sonar
    if: >-
      ${{ github.event_name == 'pull_request' && github.base_ref == 'master' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Verify Gradle Wrapper
        uses: gradle/wrapper-validation-action@v2

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install SDK components
        run: |
          sdkmanager "platform-tools" "platforms;android-${{ env.ANDROID_API_LEVEL }}" "build-tools;${{ env.ANDROID_BUILD_TOOLS }}"
          yes | sdkmanager --licenses

      - name: Gradle cache
        uses: gradle/gradle-build-action@v3
        with:
          gradle-wrapper-cache-enabled: true
          gradle-home-cache-cleanup: true

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Install system image for emulator
        run: |
          sdkmanager "system-images;android-${{ env.ANDROID_API_LEVEL }};google_apis;x86_64"

      - name: Start emulator and run connected tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ env.ANDROID_API_LEVEL }}
          target: google_apis
          arch: x86_64
          force-avd-creation: true
          emulator-options: -no-snapshot -noaudio -no-boot-anim -gpu swiftshader_indirect -no-window
          disable-animations: true
          script: ./gradlew --no-daemon --stacktrace --warning-mode all connectedDebugAndroidTest

      - name: Upload instrumented test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: androidTest-report
          path: |
            **/build/reports/androidTests/connected/**
            **/build/outputs/androidTest-results/**